import {
  Stack,
  Flex,
  Heading,
  Text,
  Button,
  Image,
  Badge,
  toast,
  useToast
} from "@chakra-ui/react";
import { Link } from "react-router-dom";
import { useWeb3React } from "@web3-react/core";
import usePunks from "../../hooks/usePunks";
import { useCallback, useEffect, useState } from "react";

const Home = () => {
  const [isMinting, setIsMinting] = useState(false);
  const [nextId, setNextId] = useState();
  const { active, account } = useWeb3React();
  const [punksLeft, setPunksLeft] = useState();
  const punkPeople = usePunks();
  const [imageSrc, setImageSrc] = useState();
  const toast = useToast();

  const getPunksData = useCallback(async() => {
    if(punkPeople) {
      const totalSupply = await punkPeople.methods.totalSupply().call();
      const dnaPreview = await punkPeople.methods.pseudoRandomDNA(totalSupply, account).call();
      const image = await punkPeople.methods.getDNAImage(dnaPreview).call();
      const _punksLeft = await punkPeople.methods.maxSupply().call() - await punkPeople.methods.totalSupply().call();
      setPunksLeft(_punksLeft);
      setImageSrc(image);
      setNextId(totalSupply);
    }
  }, [punkPeople, account])

  useEffect(() => {
    getPunksData();
  }, [getPunksData])

  const mint = () => {
    setIsMinting(true);

    // To enhance: await to end block minning
    punkPeople.methods.mint().send({
      from: account,
      value: 1e15 // 0.001 eth
    })
    .on('transactionHash', (txHash) => {
      toast({
        title: 'Transaction sent',
        description: txHash,
        status: 'info'
      })
    })
    .on('receipt', () => {
      toast({
        title: 'Transaction confirmed',
        description: 'Welcome to alpha world',
        status: 'success'
      })
      getPunksData();
      setIsMinting(false);
    })
    .on('error', (error) => {
      toast({
        title: 'Transaction failed',
        description: error.message,
        status: 'error'
      })
      setIsMinting(false);
    })

    
  }

  return (
    <Stack
      align={"center"}
      spacing={{ base: 8, md: 10 }}
      py={{ base: 20, md: 28 }}
      direction={{ base: "column-reverse", md: "row" }}
    >
      <Stack flex={1} spacing={{ base: 5, md: 10 }}>
        <Heading
          lineHeight={1.1}
          fontWeight={600}
          fontSize={{ base: "3xl", sm: "4xl", lg: "6xl" }}
        >
          <Text
            as={"span"}
            position={"relative"}
            _after={{
              content: "''",
              width: "full",
              height: "30%",
              position: "absolute",
              bottom: 1,
              left: 0,
              bg: "green.400",
              zIndex: -1,
            }}
          >
            Alpha People NFT
          </Text>
          <br />
          <Text as={"span"} color={"green.400"}>
            { punksLeft ? `Only ${punksLeft} pieces left!` : "Connect your wallet to join the alpha world!"}
            
          </Text>
        </Heading>
        <Text color={"gray.500"}>
          Alpha people is a bunch of unique punks, merged in an NFT collection generated by semi-deterministic technique. All data is storaged on-chain, react-app uploaded to IPFS and running on Ropsten Testnet.
        </Text>
        <Text color={"green.500"}>
          Mint your own and get an unique punk.
        </Text>
        <Stack
          spacing={{ base: 4, sm: 6 }}
          direction={{ base: "column", sm: "row" }}
        >
          <Button
            rounded={"full"}
            size={"lg"}
            fontWeight={"normal"}
            px={6}
            colorScheme={"green"}
            bg={"green.400"}
            _hover={{ bg: "green.500" }}
            disabled={!punkPeople}
            onClick={mint}
            isLoading={isMinting}
          >
            Get yours
          </Button>
          <Link to="/punks">
            <Button rounded={"full"} size={"lg"} fontWeight={"normal"} px={6}>
              Gallery
            </Button>
          </Link>
        </Stack>
      </Stack>
      <Flex
        flex={1}
        direction="column"
        justify={"center"}
        align={"center"}
        position={"relative"}
        w={"full"}
      >
        <Image src={active? imageSrc:"https://avataaars.io/"} />
        {active ? (
          <>
            <Flex mt={2}>
              <Badge>
                Next ID:
                <Badge ml={1} colorScheme="green">
                  {nextId}
                </Badge>
              </Badge>
              <Badge ml={2}>
                Address:
                <Badge ml={1} colorScheme="green">
                  <a href="https://ropsten.etherscan.io/address/0x71289Bd5985D8D002df2c32D70089952578b922E">
                    0x7128...922E
                  </a>
                  
                </Badge>
              </Badge>
            </Flex>
            <Button
              onClick={getPunksData}
              mt={4}
              size="xs"
              colorScheme="green"
            >
              Refresh
            </Button>
          </>
        ) : (
          <Badge mt={2}>Disconnected wallet</Badge>
        )}
      </Flex>
    </Stack>
  );
};

export default Home;